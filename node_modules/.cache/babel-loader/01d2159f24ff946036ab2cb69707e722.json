{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/Documents/porfolio-site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/porfolio-site/src/components/Experience.js\";\nimport React, { useState } from 'react';\nimport './Experience.css';\nimport { createMuiTheme, ThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport Title from './Title';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { FaCalendarAlt } from \"react-icons/fa\"; // Experience Section\n\nconst Experience = props => {\n  const _React$useState = React.useState(1),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        alignment = _React$useState2[0],\n        setAlignment = _React$useState2[1];\n\n  const styles = {\n    ToggleContainer: {\n      Button: {\n        background: \"transparent\",\n        display: \"block\",\n        margin: \"1rem\",\n        border: \"1px solid gray\"\n      },\n      ToggleButtonGroup: {\n        background: \"transparent\",\n        display: \"block\"\n      }\n    },\n    divShowTask: {\n      container: {\n        background: \"rgb(33,45,57)\"\n      },\n      li: {\n        display: \"block\",\n        color: \"honeydew\"\n      }\n    }\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const experience = props.experience;\n  return React.createElement(\"div\", {\n    className: \"containerExperience\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Title, {\n    index: \"03. \",\n    titleName: \"Where I've worked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(ToggleButtonGroup, {\n    style: styles.ToggleContainer.ToggleButtonGroup,\n    value: alignment,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, experience.map(index => {\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      style: styles.ToggleContainer.Button,\n      value: index.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" \", index.name), React.createElement(\"div\", {\n      className: \"collapse\",\n      style: styles.divShowTask.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FaCalendarAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \" \", React.createElement(Title, {\n      index: index.date,\n      size: '1rem',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \"  \")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, index.desc.map(i => {\n      return React.createElement(\"li\", {\n        style: styles.divShowTask.li,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", i.task, \" \");\n    }))));\n  })));\n};\n\nexport default Experience;","map":{"version":3,"sources":["/Users/macbookpro/Documents/porfolio-site/src/components/Experience.js"],"names":["React","useState","createMuiTheme","ThemeProvider","StylesProvider","Title","Button","ToggleButton","ToggleButtonGroup","FaCalendarAlt","Experience","props","alignment","setAlignment","styles","ToggleContainer","background","display","margin","border","divShowTask","container","li","color","handleAlignment","event","newAlignment","experience","map","index","key","name","date","desc","i","task"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './Experience.css'\nimport { createMuiTheme, ThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport Title from './Title'\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport {FaCalendarAlt } from \"react-icons/fa\"\n// Experience Section\n\nconst Experience = (props) => {\n    const [alignment, setAlignment] = React.useState(1);\n    const styles  = {\n        ToggleContainer:{\n            Button: {\n                    background: \"transparent\",\n                    display: \"block\",\n                    margin: \"1rem\",\n                    border: \"1px solid gray\"\n            }, \n            ToggleButtonGroup:{\n                background:\"transparent\",  \n                display: \"block\",\n            },\n        },\n        divShowTask: {\n            container: {\n                background: \"rgb(33,45,57)\",\n                \n            },\n            li :{\n                display: \"block\",\n                color: \"honeydew\"\n            }\n        }\n    }\n    const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n  const experience = props.experience\n    return (\n        <div className=\"containerExperience\">\n        <Title  index={\"03. \"} titleName={\"Where I've worked\"} />\n        <ToggleButtonGroup\n            style={styles.ToggleContainer.ToggleButtonGroup}\n            value={alignment}\n            exclusive\n            onChange={handleAlignment}\n            aria-label=\"text alignment\"\n            >\n            {experience.map(index => {\n                return (\n               <>\n                <Button  style={styles.ToggleContainer.Button} value={index.key}> {index.name} \n                </Button>\n                <div className=\"collapse\" style={styles.divShowTask.container} >\n                    <FaCalendarAlt >\n                        <span> <Title  index={index.date} size={'1rem'}/>  </span>\n                    </FaCalendarAlt>\n                    <ul >\n                        {\n                            index.desc.map((i) => {\n                                return (\n                                <li style={styles.divShowTask.li}> {i.task} </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n                </>\n                )\n            })}\n           </ToggleButtonGroup>\n           </div>\n    )\n}\nexport default Experience;"]},"metadata":{},"sourceType":"module"}