{"ast":null,"code":"import _objectSpread from \"/Users/macbookpro/Documents/porfolio-site/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/macbookpro/Documents/porfolio-site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/porfolio-site/src/components/Experience.js\";\nimport React, { useState } from 'react';\nimport './Experience.css';\nimport { createMuiTheme, ThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport Title from './Title';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { FaCalendarAlt, FaMapMarkerAlt, FaAngleRight } from \"react-icons/fa\"; // Experience Section\n\nconst Experience = props => {\n  const _React$useState = React.useState({\n    array: {\n      1: false,\n      2: false,\n      3: false\n    }\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        alignment = _React$useState2[0],\n        setAlignment = _React$useState2[1];\n\n  const styles = {\n    ToggleContainer: {\n      Button: {\n        background: \"transparent\",\n        display: \"block\",\n        margin: \"1rem\",\n        border: \"1px solid gray\",\n        width: \"fit-content\"\n      },\n      ToggleButtonGroup: {\n        background: \"transparent\",\n        display: \"block\"\n      }\n    },\n    divShowTask: {\n      container: {\n        background: \"rgb(33,45,57)\"\n      },\n      li: {\n        display: \"block\",\n        color: \"honeydew\"\n      },\n      title: {\n        fontSize: \"1rem\",\n        width: \"fit-content\",\n        display: \"block\"\n      }\n    }\n  };\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const handleNewArray = event => {\n    console.log(alignment);\n    var integer = parseInt(event.target.value, 10);\n    setAlignment(_objectSpread({}, alignment, {\n      array: {\n        integer: !alignment.array.integer\n      }\n    }));\n    console.log(alignment);\n  };\n\n  const experience = props.experience;\n  return React.createElement(\"div\", {\n    className: \"containerExperience\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Title, {\n    index: \"03. \",\n    titleName: \"Where I've worked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(ToggleButtonGroup, {\n    style: styles.ToggleContainer.ToggleButtonGroup,\n    value: alignment,\n    exclusive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, experience.map(index => {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"collapse\",\n      style: styles.divShowTask.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: styles.ToggleContainer.Button,\n      value: index.key,\n      href: index.web,\n      target: \"_blank\",\n      onClick: event => handleNewArray(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, index.name), React.createElement(\"div\", {\n      style: {\n        width: \"100%\",\n        float: \"right\",\n        borderBottom: \"0.5px solid gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        width: \"fit-content\",\n        float: \"left\",\n        marginLeft: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" \", index.pos, \"  \"), React.createElement(\"div\", {\n      style: {\n        width: \"fit-content\",\n        float: \"right\",\n        marginRight: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: styles.divShowTask.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \", React.createElement(FaCalendarAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \" \\xA0\", index.date, \" \"), React.createElement(\"h3\", {\n      style: styles.divShowTask.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" \", React.createElement(FaMapMarkerAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \" \", index.loc, \"  \"))), React.createElement(\"ul\", {\n      style: {\n        borderTop: \"0.5px solid gray\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, index.desc.map(i => {\n      return React.createElement(\"li\", {\n        style: styles.divShowTask.li,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" \", React.createElement(FaAngleRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), i.task, \" \");\n    }))));\n  })));\n};\n\nexport default Experience;","map":{"version":3,"sources":["/Users/macbookpro/Documents/porfolio-site/src/components/Experience.js"],"names":["React","useState","createMuiTheme","ThemeProvider","StylesProvider","Title","Button","ToggleButton","ToggleButtonGroup","FaCalendarAlt","FaMapMarkerAlt","FaAngleRight","Experience","props","array","alignment","setAlignment","styles","ToggleContainer","background","display","margin","border","width","divShowTask","container","li","color","title","fontSize","handleAlignment","event","newAlignment","handleNewArray","console","log","integer","parseInt","target","value","experience","map","index","key","web","name","float","borderBottom","marginLeft","pos","marginRight","date","loc","borderTop","desc","i","task"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './Experience.css'\nimport { createMuiTheme, ThemeProvider, StylesProvider } from '@material-ui/core/styles';\nimport Title from './Title'\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport {FaCalendarAlt,FaMapMarkerAlt , FaAngleRight} from \"react-icons/fa\"\n// Experience Section\n\nconst Experience = (props) => {\n    const [alignment, setAlignment] = React.useState({\n        array: {\n            1: false,\n            2: false,\n            3: false\n        }\n    })\n     \n    const styles  = {\n        ToggleContainer:{\n            Button: {\n                    background: \"transparent\",\n                    display: \"block\",\n                    margin: \"1rem\",\n                    border: \"1px solid gray\",\n                    width: \"fit-content\", \n            }, \n            ToggleButtonGroup:{\n                background:\"transparent\",  \n                display: \"block\",\n            },\n        },\n        divShowTask: {\n            container: {\n                background: \"rgb(33,45,57)\",\n              \n            },\n            li :{\n                display: \"block\",\n                color: \"honeydew\"\n            },\n            title: {\n                fontSize: \"1rem\",\n                width: \"fit-content\",\n                display: \"block\", \n               \n               \n            }\n        },\n    }\n    const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n  const handleNewArray = (event) => {\n      console.log(alignment)\n      var integer = parseInt(event.target.value, 10);\n        setAlignment ({\n            ...alignment,\n            array:{\n                integer: !alignment.array.integer\n            }\n        }\n    )\n    console.log(alignment)\n  }; \n  const experience = props.experience\n    return (\n        <div className=\"containerExperience\">\n        <Title  index={\"03. \"} titleName={\"Where I've worked\"} />\n        <ToggleButtonGroup\n            style={styles.ToggleContainer.ToggleButtonGroup}\n            value={alignment}\n            exclusive\n           \n            >\n            {experience.map(index => {\n                return (\n               <>\n                \n                <div className=\"collapse\" style={styles.divShowTask.container} >\n                <Button  \n                    style={styles.ToggleContainer.Button} \n                    value={index.key} \n                    href={index.web}\n                    target=\"_blank\"\n                    onClick={(event) => handleNewArray(event)}> \n                    {index.name} \n                </Button>\n                    <div style={{ width: \"100%\",  float: \"right\", borderBottom: \"0.5px solid gray\"}}>\n                       \n                            <h3 style={{width:\"fit-content\", float: \"left\", marginLeft: \"2rem\"}}> {index.pos}  </h3>\n                        <div style={{width:\"fit-content\", float:\"right\",marginRight: \"2rem\"}}>\n                            <h3 style={styles.divShowTask.title}> <FaCalendarAlt /> &nbsp;{index.date} </h3>\n                          \n                            <h3 style={styles.divShowTask.title}> <FaMapMarkerAlt /> {index.loc}  </h3>\n                     \n                        </div>\n                    </div>\n                    <ul style={{borderTop: \"0.5px solid gray\"}} >\n                        {\n                            index.desc.map((i) => {\n                                return (\n                                <li style={styles.divShowTask.li}> <FaAngleRight />{i.task} </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n                </>\n                )\n            })}\n           </ToggleButtonGroup>\n           </div>\n    )\n}\nexport default Experience;"]},"metadata":{},"sourceType":"module"}