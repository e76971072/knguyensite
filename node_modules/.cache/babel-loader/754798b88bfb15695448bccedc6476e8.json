{"ast":null,"code":"import _slicedToArray from \"/Users/macbookpro/Documents/porfolio-site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookpro/Documents/porfolio-site/src/components/Experience.js\";\nimport React, { useState } from 'react';\nimport './Experience.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'; // Experience Section\n\nconst Experience = props => {\n  const _React$useState = React.useState('left'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        alignment = _React$useState2[0],\n        setAlignment = _React$useState2[1];\n\n  const useStyles = makeStyles(theme => ({\n    toggleContainer: {\n      color: \"white\"\n    }\n  }));\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  const experience = props.experience;\n  return React.createElement(\"div\", {\n    className: \"containerExperience\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Title, {\n    index: \"03.\",\n    titleName: \"Where I've worked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(ToggleButtonGroup, {\n    value: alignment,\n    exclusive: true,\n    onChange: handleAlignment,\n    \"aria-label\": \"text alignment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, experience.map(index => {\n    return React.createElement(ToggleButton, {\n      className: useStyles.toggleContainer,\n      value: index.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, index.name);\n  })));\n};\n\nexport default Experience;","map":{"version":3,"sources":["/Users/macbookpro/Documents/porfolio-site/src/components/Experience.js"],"names":["React","useState","makeStyles","Title","Button","ToggleButton","ToggleButtonGroup","Experience","props","alignment","setAlignment","useStyles","theme","toggleContainer","color","handleAlignment","event","newAlignment","experience","map","index","key","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B,C,CAEA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,0BACQR,KAAK,CAACC,QAAN,CAAe,MAAf,CADR;AAAA;AAAA,QACnBQ,SADmB;AAAA,QACRC,YADQ;;AAE1B,QAAMC,SAAS,GAAGT,UAAU,CAACU,KAAK,KAAK;AACnCC,IAAAA,eAAe,EAAE;AACfC,MAAAA,KAAK,EAAE;AADQ;AADkB,GAAL,CAAN,CAA5B;;AAKA,QAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACjDP,IAAAA,YAAY,CAACO,YAAD,CAAZ;AACD,GAFC;;AAGF,QAAMC,UAAU,GAAGV,KAAK,CAACU,UAAzB;AACE,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAQ,IAAA,KAAK,EAAG,KAAhB;AAAuB,IAAA,SAAS,EAAE,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,iBAAD;AACA,IAAA,KAAK,EAAET,SADP;AAEA,IAAA,SAAS,MAFT;AAGA,IAAA,QAAQ,EAAEM,eAHV;AAIA,kBAAW,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMCG,UAAU,CAACC,GAAX,CAAeC,KAAK,IAAI;AACrB,WACA,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAET,SAAS,CAACE,eAAnC;AAAoD,MAAA,KAAK,EAAGO,KAAK,CAACC,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,KAAK,CAACE,IADX,CADA;AAIF,GALD,CAND,CAFJ,CADJ;AA+BH,CA1CD;;AA2CA,eAAef,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport './Experience.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title'\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\n\n// Experience Section\n\nconst Experience = (props) => {\n    const [alignment, setAlignment] = React.useState('left');\n    const useStyles = makeStyles(theme => ({\n        toggleContainer: {\n          color: \"white\",\n        },\n      }));\n    const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n  const experience = props.experience\n    return (\n        <div className=\"containerExperience\">\n            <Title  index= {\"03.\"} titleName={\"Where I've worked\"} />\n            <ToggleButtonGroup\n            value={alignment}\n            exclusive\n            onChange={handleAlignment}\n            aria-label=\"text alignment\"\n          >\n            {experience.map(index => {\n                return(\n                <ToggleButton className={useStyles.toggleContainer} value= {index.key}>\n                    {index.name}\n                </ToggleButton>\n            )})}\n          </ToggleButtonGroup>\n        {/* <Title  index= {\"03.\"} titleName={\"Where I've worked\"} />\n            <div className=\"experienceList\">\n                <ul style={styles.containerListCompanies}>\n                    {experience.map(index => {\n                    return <Button \n                    key={index.key} \n                    style={styles.buttonSecondary}\n                    onClick={(event)=> changeHandler(event)} \n                    > {index.name} \n                    </Button>\n                    })}\n                </ul>\n            </div> */}\n        </div>\n    )\n}\nexport default Experience;"]},"metadata":{},"sourceType":"module"}